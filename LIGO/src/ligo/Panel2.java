/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ligo;

import java.awt.Color;
import javax.swing.JFrame;

/**
 *
 * @author Kyle
 */
public class Panel2 extends javax.swing.JFrame {

    /**
     * Creates new form Panel2
     */
    public Panel2() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setBackground(Color.blue);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 255));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(51, 51, 51));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("          According to newtonian theory, gravitational effects propagate from place to place instantaneously. With the\n advent of Einstein's special theory of relativity in 1905, a theory uniting the concepts of space and time into that\n of four dimensional flat space-time (named Minkowski space-time after the mathematician Hermann Minkowski),\n a problem became discernible with newtonian theory. According to special relativity, which is the current guideline\n to the form of all physical theory, the speed of light, c = 3 x 1010 cm s-1, is the top speed allowed to physical\n particles or forces: There can be no instantaneous propagation. After a decade of search for new concepts to \nmake gravitational theory compatible with the spirit of special relativity, Einstein came up with the theory of general\n relativity (1915), the prototype of all modern gravitational theories. Its crucial ingredient, involving a colossal\n intellectual jump, is the concept of gravitation, not as a force, but as a manifestation of the curvature of\n space-time, an idea first mentioned in rudimentary form by the mathematician Ceorg Bernhard Riemann in 1854.\n In Einstein's hands gravitation theory was thus transformed from a theory of forces into the first dynamical theory\n of geometry, the geometry of four dimensional curved space-time.\n          Why talk of curvature? One of Einstein's first predictions was the gravitational redshift: As any wave, such as light,\n propagates away from a gravitating mass, all frequencies in it are reduced by an amount proportional to the\n change in gravitational potential experienced by the wave. This redshift has been measured in the laboratory, in\n solar observations, and by means of high precision clocks flown in airplanes. However, imagine for a moment\n that general relativity had not yet been invented, but the redshift has already been measured. According to a\n simple argument owing to Alfred Schild, wave propagation under stationary circumstances can display a redshift\n only if the usual geometric relations implicit in Minkowski space-time are violated: The space-time must be curved.\n The observations of the redshift thus show that space-time must be curved in the vicinity of\n masses, regardless of the precise form of the gravitational theory.\n          Einstein provided 10 equations relating the metric (a tensor with 10 independent components describing the\n geometry of space-time) to the material energy momentum tensor (also composed of 10 components, one of\n which corresponds to our previous rho). These Einstein field equations, in which both of the previously mentioned\n constants G and c figure as parameters, replace Poisson's equation. Einstein also replaced the newtonian law of\n motion by the statement that free test particles move along geodesics, the shortest curves in the space-time\n geometry. The influential gravitation theorist John Archibald Wheeler has encapsulated general relativity in the\n aphorism ``curvature tells matter how to move, and matter tells space-time how to curve.'' The\n EÃ¶tvos-Dicke-Braginsky experiments demonstrate with high precision that free test particles all travel\n along the same trajectories in space-time, whereas the gravitational redshift shows (with more modest precision)\n these universal trajectories to be identical with geodesics.\n         Despite the great contrast between General Relativity and Newtonian theory, predictions of the former approach\n the latter for systems in which velocities are small compared to c and gravitational potentials are weak enough\n that they cannot cause larger velocities. This is why we can discuss with newtonian theory the structure of the\n earth and planets, stars and stellar clusters, and the gross features of motions in the solar system without fear\n of error.\n        Einstein noted two other predictions of General Relativity. First, light beams passing near a gravitating body must\n suffer a slight deflection proportional to that body's mass. First verified by observations of stellar images during\n the 1919 total solar eclipse, this effect also causes deflection of quasar radio images by the sun, is the likely cause\n of the phenomenon of ``double quasars'' with identical redshift and of the recently discovered giant arcs in clusters\n of galaxies (both probably effects of gravitational lensing), and is part and parcel of the black hole phenomenon.\n In a closely related effect first noted by Irwin Shapiro, radiation passing near a gravitating body is delayed in its\n flight in proportion to the body's mass, a time delay verified by means of radar waves deflected by the sun on their\n way from Earth to Mercury and back.\n        The second effect is the precession of the periastron of a binary system. According to newtonian gravitation, the\n orbit of each member of a binary is a coplanar ellipse with orientation fixed in space. General relativity predicts a\n slow rotation of the ellipse's major axis in the plane of the orbit (precession of the periastron). Originally verified\n in the motion of Mercury, the precession has of late also been detected in the orbits of binary pulsars.\n\nAll three effects mentioned depend on features of General Relativity beyond the weak equivalence principle. Indeed,\n Einstein built into general relativity the much more encompassing ``strong equivalence principle'': the local forms of\n all nongravitational physical laws and the numerical values of all dimensionless physical constants arc the same in the\n presence of a gravitational field as in its absence. In practice this implies that within any region in a gravitational field,\n sufficiently small that space-time curvature may be ignored, all physical laws, when expressed in terms of the space-time\n metric, have the same forms as required by special relativity in terms of the metric of Minkowski space-time. Thus in a\n small region in the neighborhood of a black hole (the source of a strong gravitational field) we would describe\n electromagnetism and optics with the same Maxwell equations used in earthly laboratories where the gravitational field\n is weak, and we would employ the laboratory values of the electrical permittivity and magnetic\n susceptibility of the vacuum.");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/danny/LIGOInterface/LIGO/images/Einstein gravity.jpg")); // NOI18N

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea2.setBackground(new java.awt.Color(51, 51, 51));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Dialog", 0, 48)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setRows(5);
        jTextArea2.setText("Gravitational Theory\nBy Einstein");
        jScrollPane2.setViewportView(jTextArea2);

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/danny/LIGOInterface/LIGO/images/494519-gravity-waves.jpg")); // NOI18N

        jTextArea3.setBackground(new java.awt.Color(51, 51, 51));
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1581, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new Panel2().dispose();
        new Main_Menu().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Panel2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Panel2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Panel2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Panel2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Panel2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    // End of variables declaration//GEN-END:variables
}
